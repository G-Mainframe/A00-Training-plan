<html>

<head>
<title>4.6 段組み集計表形式の帳票定義体を利用した記述例</title>
</head>

<body BGCOLOR="#FFFFFF">

<table WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0">
  <tr>
    <td ALIGN="LEFT"><strong>帳票印刷コントロール使用手引書</strong> 
    </td>
  </tr>
  <tr>
    <td ALIGN="RIGHT"><a HREF="../index.htm" TARGET="_top">目次</a>&nbsp; <a href="pctl0450.htm"><img SRC="../pctlosrc/previous.gif" BORDER="0" ALT="前ページ" width="56" height="21"></a>                  
    </td>                 
  </tr>                 
</table>                 
                 
<hr>                 
                 
<dl>                 
  <dl>                 
    <dt><a HREF="pctl0400.htm"><img SRC="../pctlosrc/up.gif" BORDER="0" ALT="上へ" width="16" height="15">第4章                   
      帳票印刷のアプリケーションを作成する</a> </dt>                  
  </dl>                  
</dl>                  
                  
<hr>                  
                  
<h2>4.6 段組み集計表形式の帳票定義体を利用した記述例</h2>                
                
<p>ここでは段組み集計表形式の帳票定義体を利用した記述例を説明します。                 
</p>                
                
<p><img SRC="../pctlosrc/box1poin.gif" ALT="image" WIDTH="47" HEIGHT="41">　<strong>[Microsoft(R) VisualBasic(R)の記述例]</strong></p>                  
                  
<blockquote>                  
  <p>段組み集計表形式の帳票定義体を利用した記述例です。<br>               
  コマンドボタンのクリックイベントで、帳票印刷コントロール(PowerFormReport1)の「帳票印刷(PrintControl)」メソッドを呼び出します。<br>            
  データベースを参照しながらレコードデータの出力を行います。<br>            
  また、読み込んだレコードデータをもとに、部門ごとの売上高や目標、利益、人数といった各情報の集計を行います。</p>           
  <p>複数の明細を利用して出力するため、｢明細名(DEName)｣プロパティを使用して明細の切替えを行います。</p>         
  <p><img border="0" src="../pctlosrc/boxchuui.gif" width="47" height="31"><br> 
  <br> 
  明細計算(CalculateDE)イベントで明細を集計します。コントロールブレークの発生に伴い制御頭書き(CBHead)イベントで明細を初期化した場合、それまでの集計結果は初期化されます。<br> 
  処理対象の明細に対しての再計算を行う必要がある場合は、明細出力(PrintDE)イベントで再集計処理を行います。</p>        
  <p>　</p>         
</blockquote>         
         
<table BORDER="1" WIDTH="74%">         
  <tr>         
    <td><pre>'外部定義変数
Dim DaoDB1
Dim DaoRec1

'CommandButtonのClickイベント
Private Sub Command1_Click()
    'コマンドボタンを選択不可にする
    Command1.Enabled = False

    '印刷ジョブのタイトルを設定
    PowerFormReport1.PrintJobName = &quot;段組み集計表形式　コントロールブレーク印刷&quot;
    
    '帳票印刷メソッドの実行
    PowerFormReport1.PrintControl (0)

    'コマンドボタンを選択可能にする
    Command1.Enabled = True

End Sub


Private Sub PowerFormReport1_CalculateDE(ByVal PrintRecord As Long)
    '全部門に対する初期化処理
    If PowerFormReport1.RecordCount = 1 Then
            PowerFormReport1.FieldText(&quot;全部売上高&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;全部目標&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;全部利益&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;全部人数&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;一人当−全部合計&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;実績率−全部合計&quot;, -1, 0, 0) = 0
 
            PowerFormReport1.FieldText(&quot;部売上高&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;部目標&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;部利益&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;部人数&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;一人当−部合計&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;実績率−部合計&quot;, -1, 0, 0) = 0
    End If

    '印刷で利用する明細の設定
    If PowerFormReport1.FieldText(&quot;部&quot;, -1, 0, 0) = PowerFormReport1.PreFieldText(&quot;部&quot;, -1, 0, 0) Then
        PowerFormReport1.DEName = &quot;DE1&quot;
    Else
        PowerFormReport1.DEName = &quot;DE&quot;
    End If
    
End Sub


Private Sub PowerFormReport1_CBFoot(ByVal PrintRecord As Long, ByVal BrkFldName As String)
    '部門に関するの追加情報生成
    PowerFormReport1.FieldText(&quot;一人当−部合計&quot;, -1, 0, 0) = Round((Val(PowerFormReport1.FieldText(&quot;部利益&quot;, -1, 0, 0)) / Val(PowerFormReport1.FieldText(&quot;部人数&quot;, -1, 0, 0))) / 100)
    PowerFormReport1.FieldText(&quot;実績率−部合計&quot;, -1, 0, 0) = Round((1000 * Val(PowerFormReport1.FieldText(&quot;部売上高&quot;, -1, 0, 0))) / Val(PowerFormReport1.FieldText(&quot;部目標&quot;, -1, 0, 0)))
    
End Sub


Private Sub PowerFormReport1_CBHead(ByVal PrintRecord As Long, ByVal BrkFldName As String)
    If PowerFormReport1.RecordCount &gt; 1 Then
        '部門合計に関する情報をクリアする
        If BrkFldName = &quot;売上月&quot; Then
            PowerFormReport1.FieldText(&quot;全部売上高&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;全部目標&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;全部利益&quot;, -1, 0, 0) = 0
   
            PowerFormReport1.FieldText(&quot;売上高−全部合計&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;実績率−全部合計&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;目標−全部合計&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;利益−全部合計&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;一人当−全部合計&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;全部人数&quot;, -1, 0, 0) = 0
        ElseIf BrkFldName = &quot;部&quot; Then
            PowerFormReport1.FieldText(&quot;部売上高&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;部目標&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;部利益&quot;, -1, 0, 0) = 0
   
            PowerFormReport1.FieldText(&quot;売上高−部合計&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;実績率−部合計&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;目標−部合計&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;利益−部合計&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;一人当−部合計&quot;, -1, 0, 0) = 0
            PowerFormReport1.FieldText(&quot;部人数&quot;, -1, 0, 0) = 0
        End If
    End If

End Sub


'帳票印刷コントロールの帳票閉鎖(CloseReport)イベント
Private Sub PowerFormReport1_CloseReport()
    '印刷で利用したデータベースのクローズ
    DaoRec1.Close
    DaoDB1.Close

End Sub


'帳票印刷コントロールの帳票開設(OpenReport)イベント
Private Sub PowerFormReport1_OpenReport()
    '印刷で利用するデータベースのオープン
    'データベース名は、データファイルディレクトリ配下のデータファイル.mdb
    'クエリ名は、部門別売上実績
    Set DaoDB1 = DaoWS.OpenDatabase((App.Path &amp; &quot;\データファイル\データファイル.mdb&quot;), False)
    Set DaoRec1 = DaoDB1.OpenRecordset(&quot;SELECT * FROM 部門別売上実績&quot;)
    DaoRec1.MoveFirst

    '帳票定義体名、ディレクトリ名を帳票コントロール
    'のプロパティ、「FormName」、「FormDirectory」に設定します。
    'ディレクトリは、アプリ実行配下の帳票フォームのディレクトリとします。
    PowerFormReport1.FormDirectory = App.Path &amp; &quot;\帳票フォーム&quot;
    PowerFormReport1.FormName = &quot;Report.pxd&quot;

    'メディア格納ディレクトリの設定
    PowerFormReport1.MediaDirectory = App.Path &amp; &quot;\メディアファイル&quot;

End Sub


Private Sub PowerFormReport1_PageFoot(ByVal PrintRecord As Long)
    '全部門に関するの追加情報生成
    PowerFormReport1.FieldText(&quot;一人当−全部合計&quot;, -1, 0, 0) = Round((Val(PowerFormReport1.FieldText(&quot;全部利益&quot;, -1, 0, 0)) / Val(PowerFormReport1.FieldText(&quot;全部人数&quot;, -1, 0, 0))) / 100)
    PowerFormReport1.FieldText(&quot;実績率−全部合計&quot;, -1, 0, 0) = Round((1000 * Val(PowerFormReport1.FieldText(&quot;全部売上高&quot;, -1, 0, 0))) / Val(PowerFormReport1.FieldText(&quot;全部目標&quot;, -1, 0, 0)))

End Sub


Private Sub PowerFormReport1_PrintDE(ByVal PrintRecord As Long)

    '全部門に対する集計
    PowerFormReport1.FieldText(&quot;全部売上高&quot;, -1, 0, 0) = Val(PowerFormReport1.FieldText(&quot;全部売上高&quot;, -1, 0, 0)) + Val(PowerFormReport1.FieldText(&quot;売上高&quot;, -1, 0, 0))
    PowerFormReport1.FieldText(&quot;全部目標&quot;, -1, 0, 0) = Val(PowerFormReport1.FieldText(&quot;全部目標&quot;, -1, 0, 0)) + Val(PowerFormReport1.FieldText(&quot;目標&quot;, -1, 0, 0))
    PowerFormReport1.FieldText(&quot;全部利益&quot;, -1, 0, 0) = Val(PowerFormReport1.FieldText(&quot;全部利益&quot;, -1, 0, 0)) + Val(PowerFormReport1.FieldText(&quot;利益&quot;, -1, 0, 0))
    PowerFormReport1.FieldText(&quot;全部人数&quot;, -1, 0, 0) = Val(PowerFormReport1.FieldText(&quot;全部人数&quot;, -1, 0, 0)) + Val(PowerFormReport1.FieldText(&quot;課人数&quot;, -1, 0, 0))
        
    '各部門に対する集計
    PowerFormReport1.FieldText(&quot;部売上高&quot;, -1, 0, 0) = Val(PowerFormReport1.FieldText(&quot;部売上高&quot;, -1, 0, 0)) + Val(PowerFormReport1.FieldText(&quot;売上高&quot;, -1, 0, 0))
    PowerFormReport1.FieldText(&quot;部目標&quot;, -1, 0, 0) = Val(PowerFormReport1.FieldText(&quot;部目標&quot;, -1, 0, 0)) + Val(PowerFormReport1.FieldText(&quot;目標&quot;, -1, 0, 0))
    PowerFormReport1.FieldText(&quot;部利益&quot;, -1, 0, 0) = Val(PowerFormReport1.FieldText(&quot;部利益&quot;, -1, 0, 0)) + Val(PowerFormReport1.FieldText(&quot;利益&quot;, -1, 0, 0))
    PowerFormReport1.FieldText(&quot;部人数&quot;, -1, 0, 0) = Val(PowerFormReport1.FieldText(&quot;部人数&quot;, -1, 0, 0)) + Val(PowerFormReport1.FieldText(&quot;課人数&quot;, -1, 0, 0))
        
    '全部門に関するの追加情報生成
    PowerFormReport1.FieldText(&quot;売上高−全部合計&quot;, -1, 0, 0) = Round(Val(PowerFormReport1.FieldText(&quot;全部売上高&quot;, -1, 0, 0)) / 100)
    PowerFormReport1.FieldText(&quot;目標−全部合計&quot;, -1, 0, 0) = Round(Val(PowerFormReport1.FieldText(&quot;全部目標&quot;, -1, 0, 0)) / 100)
    PowerFormReport1.FieldText(&quot;利益−全部合計&quot;, -1, 0, 0) = Round(Val(PowerFormReport1.FieldText(&quot;全部利益&quot;, -1, 0, 0)) / 100)

    '部門に関するの追加情報生成
    PowerFormReport1.FieldText(&quot;売上高−部合計&quot;, -1, 0, 0) = Round(Val(PowerFormReport1.FieldText(&quot;部売上高&quot;, -1, 0, 0)) / 100)
    PowerFormReport1.FieldText(&quot;目標−部合計&quot;, -1, 0, 0) = Round(Val(PowerFormReport1.FieldText(&quot;部目標&quot;, -1, 0, 0)) / 100)
    PowerFormReport1.FieldText(&quot;利益−部合計&quot;, -1, 0, 0) = Round(Val(PowerFormReport1.FieldText(&quot;部利益&quot;, -1, 0, 0)) / 100)
    
    '課に関するの追加情報生成
    PowerFormReport1.FieldText(&quot;売上高−課合計&quot;, -1, 0, 0) = Round(Val(PowerFormReport1.FieldText(&quot;売上高&quot;, -1, 0, 0)) / 100)
    PowerFormReport1.FieldText(&quot;目標−課合計&quot;, -1, 0, 0) = Round(Val(PowerFormReport1.FieldText(&quot;目標&quot;, -1, 0, 0)) / 100)
    PowerFormReport1.FieldText(&quot;利益−課合計&quot;, -1, 0, 0) = Round(Val(PowerFormReport1.FieldText(&quot;利益&quot;, -1, 0, 0)) / 100)
    
    '明細に関するの追加情報生成
    PowerFormReport1.FieldText(&quot;一人当&quot;, -1, 0, 0) = Round((Val(PowerFormReport1.FieldText(&quot;利益&quot;, -1, 0, 0)) / Val(PowerFormReport1.FieldText(&quot;課人数&quot;, -1, 0, 0))) / 100)
    PowerFormReport1.FieldText(&quot;実績率&quot;, -1, 0, 0) = Round((1000 * Val(PowerFormReport1.FieldText(&quot;売上高&quot;, -1, 0, 0))) / Val(PowerFormReport1.FieldText(&quot;目標&quot;, -1, 0, 0)))
    
End Sub


'帳票印刷コントロールのレコード読込み(ReadRecord)イベント
Private Sub PowerFormReport1_ReadRecord(ByVal PrintRecord As Long)
    Dim FiledCount
    Dim FiledName

    If PowerFormReport1.RecordCount &gt; 1 Then
        '２件目以降のレコードを使用するため、次レコードに移動
       DaoRec1.MoveNext
    End If

    If DaoRec1.EOF Then
        '最終レコードまで処理したのでＥＯＦ設定
        PowerFormReport1.RecordEOF = True
        GoTo EndSub:
    End If
    
    'データベースの対応する項目からデータを転記する
    For FiledCount = 0 To DaoRec1.Fields.Count - 1
        '読み込むデータデースのフィールド名を調べる
        FiledName = DaoRec1.Fields(FiledCount).Name
        'データが指定されているかどうか調べる
        If DaoRec1.Fields(FiledName) &lt;&gt; 0 Then
            'データがあるので転記する
            PowerFormReport1.FieldText(FiledName, -1, 0, 0) = DaoRec1.Fields(FiledName)
        Else
            'データがないので初期化する
            If PowerFormReport1.FieldType(FiledName, -1, 0, 0) = 2 Then
                PowerFormReport1.FieldText(FiledName, -1, 0, 0) = &quot;0&quot;
            Else
                PowerFormReport1.FieldText(FiledName, -1, 0, 0) = &quot;&quot;
            End If
        End If
    Next FiledCount

EndSub:

End Sub


'フォームモジュールのロードイベント
Private Sub Form_Load()
    'ＤＡＯワークスペースのオープン
    Set DaoWS = DBEngine.Workspaces(0)
    'カレントディレクトリの変更
    ChDir (App.Path &amp; &quot;\データファイル&quot;)

End Sub


'フォームモジュールの終了イベント
Private Sub Form_Terminate()
    'ＤＡＯワークスペースのクローズ
    DaoWS.Close

End Sub
</pre>         
    </td>         
  </tr>         
</table>         
         
<p><a href="../pctlosrc/sample/Report02.exe">サンプルプログラムのダウンロード</a></p>        
        
<hr>        
        
<table WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0">        
  <tr>        
    <td ALIGN="RIGHT"><a HREF="../index.htm" TARGET="_top">目次</a>&nbsp; <a href="pctl0450.htm"><img SRC="../pctlosrc/previous.gif" BORDER="0" ALT="前ページ" width="56" height="21"></a>                  
    </td>                 
  </tr>                 
</table>                 
                 
<hr>                 
                 
<p align="right">All Rights Reserved, Copyright (C) 富士通株式会社 
1998-2001</p>                
</body>                
</html>                
